University Database Schema:
Student (ID, name,dept-name, tot-cred)
Instructor(ID, name, dept-name, salary)
Course (Course-id, title,dept-name, credits)
Takes (ID, course-id, sec-id, semester, year, grade)
Classroom (building, room-number, capacity)
Department (dept-name, building, budget)
Section (course-id, section-id, semester, year, building, room-number, time-slot-id)
Teaches (id, course-id, section-id, semester, year)
Advisor(s-id, i-id)
Time-slot (time-slot-id, day, start-time, end-time)
Prereq (course-id, prereq-id)

1. select course_id, title from course natural join takes where semester = 'Fall' and year = 2009 UNION select course_id, title from course natural join takes where semester = 'Spring' and year = 2010;

2. select course_id, title from course natural join takes where semester = 'Fall' and year = 2009 INTERSECT select course_id, title from course natural join takes where semester = 'Spring' and year = 2010;

3. select course_id, title from course natural join takes where semester = 'Fall' and year = 2009 MINUS select course_id, title from course natural join takes where semester = 'Spring' and year = 2010;

**4. select title from course where course_id not in (select course_id from takes);

5. select title from section natural join course where semester = 'Fall' and year = 2009 and title in (select title from section natural join course where semester = 'Spring' and year = 2010);

6. select count(ID) from takes where course_id in(select course_id from teaches where ID = '10101');

7. select title from section natural join course where semester = 'Fall' and year = 2009 and title not in (select title from section natural join course where semester = 'Spring' and year = 2010);

8. select name from student where name in (select name from instructor);

9. select name from instructor where salary > some (select salary from instructor where dept_name = 'Biology');

10. select name from instructor where salary > all (select salary from instructor where dept_name = 'Biology');

11. select dept_name, avg(salary) from instructor group by dept_name having avg(salary) >= all (select avg(salary) from instructor group by dept_name);

12. select dept_name from department where budget < (select avg(salary) from instructor);

**13. select course_id from section S where semester = 'Fall'  and year = 2009 and exists (select * from section T where semester = 'Spring' and year = 2010 and S.course_id=T.course_id);
 

----wrong----
select title from course where exists (select course_id from section natural join course where semester = 'Fall'  and year = 2009) intersect select title from course where exists (select course_id from section natural join course where semester = 'Spring' and year = 2010);

**14. select name from student where exists (select t.id from takes t, course c where t.course_id = c.course_id and c.dept_name = 'Biology' and student.id = t.id);

15. select title from course where course_id in (select course_id from section where year = 2009 group by course_id having count(course_id) <= 1);

16. select name,dept_name from student s where 2 <= (select count(id) from takes t where s.id=t.id and s.dept_name='Comp. Sci.' group by id);

17. select dept_name, avg_sal from (select dept_name,avg(salary) avg_sal from instructor group by dept_name having avg(salary)>42000);

18)
create view all_courses as select building,room_number from section natural join course where dept_name='Physics' and semester='Fall' and year=2009;

19)
select * from all_courses;

20)
create view dept_tot_sal as select dept_name,sum(salary) tot_salary from instructor group by dept_name;
select * from dept_tot_sal;

A4.
with cn(id, val) as
(select distinct id, count(course_id) val from takes group by id)
select distinct name dept_name, val from student s, takes t, cn where s.id=t.id and s.id=cn.id;





















